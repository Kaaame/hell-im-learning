//#include <conio.h>
#include <iostream>
#include <time.h>
#include <fstream>
#include <vector>
#include <windows.h>


using namespace std;
int a=0,b=2,c= 4;

vector<string> ReturnCharArray(string filename);
void PrintAsciiChar(vector<string> input);
void PrintMultipleChar(vector<string> first, vector<string> second);
void PrintAsciiTime(vector<string> hourfirst, vector<string> hoursecond,
                    vector<string> minutefirst, vector<string> minutesecond,
                    vector<string> secondfirst, vector<string> secondsecond);
//Wszystkie pliki zawieraja tylko X linijek
const int FileLength = 4;

int main()
{
  time_t rawtime;
  string times;
  struct tm * timeinfo;
  static char buffer[80]; //deklaracja pojemnika na czas
  time (&rawtime);
  timeinfo = localtime(&rawtime);
  vector<string> hf = ReturnCharArray("0.txt");
  vector<string> hs = ReturnCharArray("0.txt");
  vector<string> mf = ReturnCharArray("0.txt");
  vector<string> ms = ReturnCharArray("0.txt");
  vector<string> sf = ReturnCharArray("0.txt");
  vector<string> ss = ReturnCharArray("0.txt");
  vector<string> onechar = ReturnCharArray("1.txt");
  vector<string> twochar = ReturnCharArray("2.txt");
  vector<string> threechar = ReturnCharArray("3.txt");
  vector<string> fourchar = ReturnCharArray("4.txt");
  vector<string> fivechar = ReturnCharArray("5.txt");
  vector<string> sixchar = ReturnCharArray("6.txt");
  vector<string> sevenchar = ReturnCharArray("7.txt");
  vector<string> eightchar = ReturnCharArray("8.txt");
  vector<string> ninechar = ReturnCharArray("9.txt");
  vector<string> zerochar = ReturnCharArray("0.txt");
  vector<string> colon = ReturnCharArray("colon.txt");
  while(true)
  {
    strftime(buffer,80,"%H%M%S",timeinfo);
    for (a;a<=1;a++)
    {
      if(a==0)
      {
        if(buffer[a]=='0')hf=zerochar;
        if(buffer[a]=='1')hf=onechar;
        if(buffer[a]=='2')hf=twochar;
        if(buffer[a]=='3')hf=threechar;
        if(buffer[a]=='4')hf=fourchar;
        if(buffer[a]=='5')hf=fivechar;
        if(buffer[a]=='6')hf=sixchar;
        if(buffer[a]=='7')hf=sevenchar;
        if(buffer[a]=='8')hf=eightchar;
        if(buffer[a]=='9')hf=ninechar;
      }
      if(a==1)
      {
        if(buffer[a]=='0')hs=zerochar;
        if(buffer[a]=='1')hs=onechar;
        if(buffer[a]=='2')hs=twochar;
        if(buffer[a]=='3')hs=threechar;
        if(buffer[a]=='4')hs=fourchar;
        if(buffer[a]=='5')hs=fivechar;
        if(buffer[a]=='6')hs=sixchar;
        if(buffer[a]=='7')hs=sevenchar;
        if(buffer[a]=='8')hs=eightchar;
        if(buffer[a]=='9')hs=ninechar;
      }
    //i=0;
	}
	for (b;b<=3;b++)
	{
      if(b==2)
      {
        if(buffer[b]=='0')mf=zerochar;
        if(buffer[b]=='1')mf=onechar;
        if(buffer[b]=='2')mf=twochar;
        if(buffer[b]=='3')mf=threechar;
        if(buffer[b]=='4')mf=fourchar;
        if(buffer[b]=='5')mf=fivechar;
        if(buffer[b]=='6')mf=sixchar;
        if(buffer[b]=='7')mf=sevenchar;
        if(buffer[b]=='8')mf=eightchar;
        if(buffer[b]=='9')mf=ninechar;
      }
      if(b==3)
      {
        if(buffer[b]=='0')ms=zerochar;
        if(buffer[b]=='1')ms=onechar;
        if(buffer[b]=='2')ms=twochar;
        if(buffer[b]=='3')ms=threechar;
        if(buffer[b]=='4')ms=fourchar;
        if(buffer[b]=='5')ms=fivechar;
        if(buffer[b]=='6')ms=sixchar;
        if(buffer[b]=='7')ms=sevenchar;
        if(buffer[b]=='8')ms=eightchar;
        if(buffer[b]=='9')ms=ninechar;
      }
	//i=2;
	}
	for (c;c<=5;c++)
	{
      if(c==4)
      {
        if(buffer[c]=='0')sf=zerochar;
        if(buffer[c]=='1')sf=onechar;
        if(buffer[c]=='2')sf=twochar;
        if(buffer[c]=='3')sf=threechar;
        if(buffer[c]=='4')sf=fourchar;
        if(buffer[c]=='5')sf=fivechar;
        if(buffer[c]=='6')sf=sixchar;
        if(buffer[c]=='7')sf=sevenchar;
        if(buffer[c]=='8')sf=eightchar;
        if(buffer[c]=='9')sf=ninechar;
      }
      if(c==5)
      {
        if(buffer[c]=='0')ss=zerochar;
        if(buffer[c]=='1')ss=onechar;
        if(buffer[c]=='2')ss=twochar;
        if(buffer[c]=='3')ss=threechar;
        if(buffer[c]=='4')ss=fourchar;
        if(buffer[c]=='5')ss=fivechar;
        if(buffer[c]=='6')ss=sixchar;
        if(buffer[c]=='7')ss=sevenchar;
        if(buffer[c]=='8')ss=eightchar;
        if(buffer[c]=='9')ss=ninechar;
  		}
    }
    PrintAsciiTime(hf,hs,mf,ms,sf,ss);
    Sleep(1000);
    //cout << buffer << endl;
    system("cls");
  }
}
/*
Zwraca tablice ze znakami ascii, chyba trzeba dac endl pomiedzy liniami
plik powinien zawierav jeden znak ascii, to jest tylko 1 lub 2 etc.
endl moze przeszkadzac- mialem racje
*/

vector<string> ReturnCharArray(string filename)
{
  fstream file;
  string data;
  vector<string> characters;
  file.open(filename.c_str(),ios::in);
  if (file.good())
  {
    while(!file.eof())
    {
      getline(file,data);
      characters.push_back(data);
      //characters.push_back("\n"); nie potrzebne
    }
  }
  file.close();
  return characters;
}

void PrintAsciiChar(vector<string> input) // dziala dla jednego znaku :)
{
  /* Zakladajac, ze poprzednia funkcja dziala, powinnismy wydrukowac
    poprzez iteracje wartosci tablicy characters, narazie jeden znak
  */
  for(int i = 0; i<FileLength;i++) // iteracja poprzez linie tablicy
  {
    //printf("%s \n", input[i] ); nie dziala
    cout << input[i] << endl;
  }
}
void PrintMultipleChar(vector<string> first, vector<string> second)
{
	/* Teraz zaleznosc od czasu */
	for (int i = 0; i<FileLength;i++)
	{
		cout << first[i] << " " << second[i] << endl;
	}
}
void PrintAsciiTime(vector<string> hourfirst, vector<string> hoursecond,
                    vector<string> minutefirst, vector<string> minutesecond,
                    vector<string> secondfirst, vector<string> secondsecond)
{
  for (int i = 0; i<FileLength;i++)
  {
    vector<string> colon = ReturnCharArray("colon.txt");
    cout << hourfirst[i] << hoursecond[i] << colon[i]
    << minutefirst[i] << minutesecond[i] << colon[i]
    << secondfirst[i] << secondsecond[i] << endl;

  }

}
